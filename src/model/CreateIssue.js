/**
 * Traction Tools API - V1
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.6-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.TractionToolsApiV1) {
      root.TractionToolsApiV1 = {};
    }
    root.TractionToolsApiV1.CreateIssue = factory(root.TractionToolsApiV1.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The CreateIssue model module.
   * @module model/CreateIssue
   * @version v1
   */

  /**
   * Constructs a new <code>CreateIssue</code>.
   * @alias module:model/CreateIssue
   * @class
   * @param meetingId {Number} Level 10 meeting ID
   * @param title {String} Title for the issue
   */
  var exports = function(meetingId, title) {
    var _this = this;

    _this['meetingId'] = meetingId;
    _this['title'] = title;


  };

  /**
   * Constructs a <code>CreateIssue</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CreateIssue} obj Optional instance to populate.
   * @return {module:model/CreateIssue} The populated <code>CreateIssue</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('meetingId')) {
        obj['meetingId'] = ApiClient.convertToType(data['meetingId'], 'Number');
      }
      if (data.hasOwnProperty('title')) {
        obj['title'] = ApiClient.convertToType(data['title'], 'String');
      }
      if (data.hasOwnProperty('ownerId')) {
        obj['ownerId'] = ApiClient.convertToType(data['ownerId'], 'Number');
      }
      if (data.hasOwnProperty('notes')) {
        obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
      }
    }
    return obj;
  }

  /**
   * Level 10 meeting ID
   * @member {Number} meetingId
   */
  exports.prototype['meetingId'] = undefined;
  /**
   * Title for the issue
   * @member {String} title
   */
  exports.prototype['title'] = undefined;
  /**
   * Owner's user ID (Default: you)
   * @member {Number} ownerId
   */
  exports.prototype['ownerId'] = undefined;
  /**
   * Optional issue notes (Default: none)
   * @member {String} notes
   */
  exports.prototype['notes'] = undefined;



  return exports;
}));


