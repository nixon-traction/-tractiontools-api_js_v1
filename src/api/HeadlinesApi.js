/**
 * Traction Tools API - V1
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.6-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Headline', 'model/Title'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/Headline'), require('../model/Title'));
  } else {
    // Browser globals (root is window)
    if (!root.TractionToolsApiV1) {
      root.TractionToolsApiV1 = {};
    }
    root.TractionToolsApiV1.HeadlinesApi = factory(root.TractionToolsApiV1.ApiClient, root.TractionToolsApiV1.Headline, root.TractionToolsApiV1.Title);
  }
}(this, function(ApiClient, Headline, Title) {
  'use strict';

  /**
   * Headlines service.
   * @module api/HeadlinesApi
   * @version v1
   */

  /**
   * Constructs a new HeadlinesApi. 
   * @alias module:api/HeadlinesApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the headlinesGetHeadline operation.
     * @callback module:api/HeadlinesApi~headlinesGetHeadlineCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Headline} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a specific people headline
     * @param {Number} HEADLINE_ID People headline ID
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.includeOrigin 
     * @param {Boolean} opts.includePermission Include permission in the response
     * @param {module:api/HeadlinesApi~headlinesGetHeadlineCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Headline}
     */
    this.headlinesGetHeadline = function(HEADLINE_ID, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'HEADLINE_ID' is set
      if (HEADLINE_ID === undefined || HEADLINE_ID === null) {
        throw new Error("Missing the required parameter 'HEADLINE_ID' when calling headlinesGetHeadline");
      }


      var pathParams = {
        'HEADLINE_ID': HEADLINE_ID
      };
      var queryParams = {
        'Include_Origin': opts['includeOrigin'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Include_Permission': opts['includePermission']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json'];
      var returnType = Headline;

      return this.apiClient.callApi(
        '/api/v1/headline/{HEADLINE_ID}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the headlinesGetMineHeadlines operation.
     * @callback module:api/HeadlinesApi~headlinesGetMineHeadlinesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Headline>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get headlines you own
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.includeOrigin 
     * @param {Boolean} opts.includePermission Include permission in the response
     * @param {module:api/HeadlinesApi~headlinesGetMineHeadlinesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Headline>}
     */
    this.headlinesGetMineHeadlines = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'Include_Origin': opts['includeOrigin'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Include_Permission': opts['includePermission']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json'];
      var returnType = [Headline];

      return this.apiClient.callApi(
        '/api/v1/headline/users/mine', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the headlinesGetUserHeadlines operation.
     * @callback module:api/HeadlinesApi~headlinesGetUserHeadlinesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Headline>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all headlines owned by a user.
     * @param {Number} USER_ID 
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.includeOrigin 
     * @param {Boolean} opts.includePermission Include permission in the response
     * @param {module:api/HeadlinesApi~headlinesGetUserHeadlinesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Headline>}
     */
    this.headlinesGetUserHeadlines = function(USER_ID, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'USER_ID' is set
      if (USER_ID === undefined || USER_ID === null) {
        throw new Error("Missing the required parameter 'USER_ID' when calling headlinesGetUserHeadlines");
      }


      var pathParams = {
        'USER_ID': USER_ID
      };
      var queryParams = {
        'Include_Origin': opts['includeOrigin'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Include_Permission': opts['includePermission']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json'];
      var returnType = [Headline];

      return this.apiClient.callApi(
        '/api/v1/headline/users/{USER_ID}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the headlinesRemoveHeadlines operation.
     * @callback module:api/HeadlinesApi~headlinesRemoveHeadlinesCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a people headline
     * @param {Number} HEADLINE_ID 
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.includePermission Include permission in the response
     * @param {module:api/HeadlinesApi~headlinesRemoveHeadlinesCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.headlinesRemoveHeadlines = function(HEADLINE_ID, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'HEADLINE_ID' is set
      if (HEADLINE_ID === undefined || HEADLINE_ID === null) {
        throw new Error("Missing the required parameter 'HEADLINE_ID' when calling headlinesRemoveHeadlines");
      }


      var pathParams = {
        'HEADLINE_ID': HEADLINE_ID
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Include_Permission': opts['includePermission']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi(
        '/api/v1/headline/{HEADLINE_ID}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the headlinesUpdateHeadlines operation.
     * @callback module:api/HeadlinesApi~headlinesUpdateHeadlinesCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a People Headline
     * @param {Number} HEADLINE_ID People headline ID
     * @param {module:model/Title} body 
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.includePermission Include permission in the response
     * @param {module:api/HeadlinesApi~headlinesUpdateHeadlinesCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.headlinesUpdateHeadlines = function(HEADLINE_ID, body, opts, callback) {
      opts = opts || {};
      var postBody = body;

      // verify the required parameter 'HEADLINE_ID' is set
      if (HEADLINE_ID === undefined || HEADLINE_ID === null) {
        throw new Error("Missing the required parameter 'HEADLINE_ID' when calling headlinesUpdateHeadlines");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling headlinesUpdateHeadlines");
      }


      var pathParams = {
        'HEADLINE_ID': HEADLINE_ID
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Include_Permission': opts['includePermission']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'text/json', 'application/x-www-form-urlencoded'];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi(
        '/api/v1/headline/{HEADLINE_ID}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
